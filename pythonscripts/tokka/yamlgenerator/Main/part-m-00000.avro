Objavro.schemaö¼{"type":"record","name":"Pair","namespace":"org.apache.avro.mapred","fields":[{"name":"key","type":{"type":"record","name":"RecordId","namespace":"com.cerner.pophealth.refrecord.models.standard","doc":"* A structure representing a RecordId","fields":[{"name":"dataPartitionId","type":{"type":"string","avro.java.string":"String"},"doc":"* Identifier for the particular source for a consumer"},{"name":"personId","type":{"type":"string","avro.java.string":"String"},"doc":"* Identifier for the person"}]},"doc":""},{"name":"value","type":[{"type":"record","name":"Encounter","namespace":"com.cerner.pophealth.refrecord.models.standard","doc":"* A model representing an encounter (typically an episode of care).","fields":[{"name":"encounterId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* An id that uniquely identifies this Encounter for a person within the same data partition.","default":null},{"name":"uid","type":{"type":"string","avro.java.string":"String"},"doc":"* A unique identifier of the encounter across all partitions of the reference record."},{"name":"sourceId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* DEPRECATED - to be replaced by the Source.\n         * The id of the encounter provided by the data source.","default":null,"deprecated":"true"},{"name":"personId","type":{"type":"string","avro.java.string":"String"},"doc":"* The id of the patient associated with the encounter as provided by the data source."},{"name":"reasonForVisit","type":["null",{"type":"record","name":"Code","doc":"* An aggregation of a raw and a mapped standard code.","fields":[{"name":"raw","type":{"type":"record","name":"RawCode","namespace":"com.cerner.pophealth.refrecord.models.raw","doc":"* A model representing a code attribute as it was received from the data source.","fields":[{"name":"id","type":{"type":"string","avro.java.string":"String"},"doc":"* The id of the code provided by the data source."},{"name":"codingSystemId","type":{"type":"string","avro.java.string":"String"},"doc":"* The id of the coding system provided by the data source."},{"name":"display","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The display of the code provided by the data source.","default":null},{"name":"translations","type":{"type":"array","items":{"type":"record","name":"RawCodeTranslation","doc":"* An equivalent code Id and coding system for a concept.","fields":[{"name":"id","type":{"type":"string","avro.java.string":"String"},"doc":"* The id of the code provided by the data source."},{"name":"codingSystemId","type":{"type":"string","avro.java.string":"String"},"doc":"* The id of the coding system provided by the data source."},{"name":"display","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The display of the code translation provided by the data source.","default":null}]}},"doc":"* A list of translations. Added to support more than one translation.","default":[]}]},"doc":"* Raw code."},{"name":"standard","type":["null",{"type":"record","name":"StandardCode","doc":"* A standard code with code id and coding system id.","fields":[{"name":"id","type":{"type":"string","avro.java.string":"String"},"doc":"* The code id."},{"name":"codingSystemId","type":{"type":"string","avro.java.string":"String"},"doc":"* The coding system id."},{"name":"primaryDisplay","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The display of the code provided by the content provider for the coding system.","default":null}]}],"doc":"* Mapped standard code.","default":null}]}],"doc":"* The provider's description of the reason for visit.","default":null},{"name":"reasonForVisitFreeText","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The provider's description of the reason for visit.","default":null},{"name":"financialClass","type":["null","Code"],"doc":"* Financial class for the encounter. Indicates if the patient has HMP, PPO, Medicaid, Self-Pay etc.","default":null},{"name":"aliases","type":{"type":"array","items":{"type":"record","name":"EncounterId","doc":"* A model representing an ID of an encounter.","fields":[{"name":"type","type":["null","Code"],"doc":"* The type of the encounter ID.  Examples: Financial Number, Encounter MRN, etc.","default":null},{"name":"value","type":{"type":"string","avro.java.string":"String"},"doc":"* The value of the ID."},{"name":"assigningAuthority","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The assigning authority of the ID.  It is strongly preferred that the assigning authority be an OID.","default":null}],"validationType":{"AT_LEAST_ONE_OF":["type","assigningAuthority"]}}},"doc":"* The aliases (i.e. IDs) of the encounter.  Examples are Financial Number, Encounter MRN, etc.","default":[]},{"name":"facility","type":["null",{"type":"record","name":"LocationLite","doc":"* A lightweight model that represents a location.  Typically this model is used to represent a\n     * location (e.g. facility, building, nurse unit, service location, etc) in activity data.","fields":[{"name":"sourceId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The identifier of the location provided by the source system","default":null},{"name":"name","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The display of the location","default":null},{"name":"timeZoneId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The Time zone Id of the location.","default":null,"validationType":["TIMEZONE"]},{"name":"types","type":{"type":"array","items":"Code"},"doc":"* Indicates the types of function performed at the location.","default":[]}],"validationType":{"AT_LEAST_ONE_OF":["sourceId","name"]}}],"doc":"* DEPRECATED - To get the most recent facility, need to look at the first item in the encounterLocations.\n         * The facility where the encounter occurred.","default":null,"deprecated":"true"},{"name":"building","type":["null","LocationLite"],"doc":"* DEPRECATED - To get the most recent building, need to look at the first item in the encounterLocations.\n         * The building where the encounter occurred.","default":null,"deprecated":"true"},{"name":"serviceDeliveryLocation","type":["null","LocationLite"],"doc":"* DEPRECATED - To get the most recent serviceDeliveryLocation, need to look at the first item in the encounterLocations.\n         * The service delivery location where the encounter occurred.  Can be a nursing unit in an inpatient setting or an office in an ambulatory setting.","default":null,"deprecated":"true"},{"name":"hospitalService","type":["null","Code"],"doc":"* DEPRECATED - To get the most recent hospitalService, need to look at the first item in the encounterHospitalServices.\n         * The most recent hospital service provided during the encounter. If the Encounter is ongoing, it represent the service currently rendered to the patient. \n         * If the patient is discharged, it represents the service rendered at the time of discharge","default":null,"deprecated":"true"},{"name":"classification","type":["null","Code"],"doc":"* DEPRECATED - store classification in the encounterType list.\n        * Classification of the encounter.","default":null,"deprecated":"true"},{"name":"type","type":["null","Code"],"doc":"* DEPRECATED - store type in the encounterType list.\n         * The type of the encounter. Examples: Inpatient, Outpatient and Recurring patient.","default":null,"deprecated":"true"},{"name":"dischargeDisposition","type":["null","Code"],"doc":"* The disposition of the patient at discharge of the encounter.","default":null},{"name":"dischargeToLocation","type":["null","Code"],"doc":"* The location that the patient was discharged to.","default":null},{"name":"organization","type":["null",{"type":"record","name":"OrganizationLite","doc":"* A lightweight model representing an organization.  This model is typically used to model an organization in activity models.","fields":[{"name":"organizationId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* A unique identifier for organization from source system.\n         * This attribute can be used to identify the organization in reference data from the same source system.","default":null},{"name":"aliases","type":{"type":"array","items":{"type":"record","name":"OrganizationId","doc":"* A model representing an organization Id.","fields":[{"name":"value","type":{"type":"string","avro.java.string":"String"},"doc":"* The actual value of the organization ID."},{"name":"type","type":{"type":"enum","name":"OrganizationIdType","doc":"An enumeration indicating type of Organization Identifier. e.g. NPI = National Provider Identifier,\n     * TAX = tax id, EXTERNAL = Client assigned, NABP = National Association of Boards of Pharmacy Number","symbols":["NPI","TAX","EXTERNAL","NABP","HL7_OID","_NOT_RECOGNIZED"]},"doc":"* The type of ID."},{"name":"assigningAuthority","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The assigning authority of the ID.  It is strongly preferred that the assigning authority be an OID.","default":null}]}},"doc":"* The list of industry standard identifiers for the organization.  For example, the organization's NPI or federal tax ID.","default":[]},{"name":"name","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The name of the organization.","default":null}],"validationType":{"AT_LEAST_ONE_OF":["organizationId","aliases","name"]}}],"doc":"* DEPRECATED - use serviceProviderOrg instead\n         * The organization that \"owns\" this encounter.","default":null,"deprecated":"true"},{"name":"serviceProviderOrg","type":["null","OrganizationLite"],"doc":"* The facility where the encounter is occurred.","default":null},{"name":"relatedProviders","type":{"type":"array","items":{"type":"record","name":"ProviderRelationship","doc":"* A provider relationship, consisting of a lightweight provider and a relationship type code.","fields":[{"name":"providerRelationshipId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* An id that uniquely identifies this ProviderRelationship for a person within the same data partition.","default":null},{"name":"provider","type":{"type":"record","name":"ProviderLite","doc":"* A lightweight provider, consisting of an ID and a full name.","fields":[{"name":"providerId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* A unique identifier for provider from source system.\n         * This attribute can be used to identify the provider in reference data from the same source system.","default":null},{"name":"aliases","type":{"type":"array","items":{"type":"record","name":"ProviderId","doc":"* A model representing a provider Id.","fields":[{"name":"value","type":{"type":"string","avro.java.string":"String"},"doc":"* The value of the code provided by the data source.  This is required attribute."},{"name":"type","type":{"type":"enum","name":"ProviderIdType","doc":"* An enumeration indicating type of Provider Identifier. e.g. NPI = National Provider Identifier, \n     * DEA = Prescription Number for controlled substance, TAX = tax id, SL = State License, \n     * EXTERNAL = Client assigned, UPIN = Unique Physician Identification Number, EI = Employee Number","symbols":["NPI","DEA","TAX","SL","EXTERNAL","UPIN","EI","_NOT_RECOGNIZED"]},"doc":"* The type of the provider ID.  This is a required attribute."},{"name":"assigningAuthority","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The assigning authority of the ID.  It is strongly preferred that the assigning authority be an OID.","default":null}]}},"doc":"* The IDs of the provider.","default":[]},{"name":"name","type":["null",{"type":"record","name":"ProviderName","doc":"* A model containing attributes of a provider name, including an optional type.","fields":[{"name":"givenNames","type":{"type":"array","items":{"type":"string","avro.java.string":"String"}},"doc":"* A list of given name portions of the provider's name.  For example, if a person has a first name and a middle name,\n         * the first name should be the first item in the list and the middle name should be the second item in the list.","default":[]},{"name":"familyNames","type":{"type":"array","items":{"type":"string","avro.java.string":"String"}},"doc":"* A list of family (i.e. last) name portions of the provider's name.  Some may have multiple family names.","default":[]},{"name":"titles","type":{"type":"array","items":{"type":"string","avro.java.string":"String"}},"doc":"* A list of titles associated to the provider's name.","default":[]},{"name":"prefix","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The prefix portion of the provider's name.","default":null},{"name":"suffix","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The suffix portion of the provider's name.","default":null},{"name":"degrees","type":{"type":"array","items":{"type":"string","avro.java.string":"String"}},"doc":"* A list of degrees associated to the provider's name.","default":[]}],"validationType":{"AT_LEAST_ONE_OF":["fullName","givenNames","familyNames"]}}],"doc":"* The name of the provider.","default":null},{"name":"fullName","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The full name of the provider.","default":null},{"name":"middleName","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The Middle name of the provider.","default":null},{"name":"suffix","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The suffix portion of the provider's name.","default":null}],"validationType":{"AT_LEAST_ONE_OF":["providerId","aliases","fullName","name"]}},"doc":"* The provider related to the entity.  This attribute is required."},{"name":"type","type":["null","Code"],"doc":"* The type of relationship the provider has to the related entity.","default":null},{"name":"beginDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The begin date of the relationship to the provider.\n         * In IS0-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z)","default":null,"validationType":"ISO_DATE_AND_TIME"},{"name":"endDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The end date of the relationship to the provider.\n         * In IS0-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z)","default":null,"validationType":"ISO_DATE_AND_TIME"}]}},"doc":"* A list of related providers to this encounter.","default":[]},{"name":"encounterNumber","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* DEPRECATED - The encounterNumber is available in the aliases array\n         * A number that typically uniquely identifies this encounter to billing systems.  This number usually can be found on claims or other bills.","default":null,"deprecated":"true"},{"name":"admissionSource","type":["null","Code"],"doc":"* The place the patient came from before being admitted to the current location.  This typically applies to inpatient encounters where the patient was transferred from another hospital.","default":null},{"name":"hospitalizationStartDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* Indicates the date and time on which a patient was admitted to the hospital.\n         * The date and time should be in ISO-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z), though equivalent ISO-8601 basic is also allowed (e.g. YYYYMMDD).","default":null,"validationType":"ISO_DATE_AND_TIME"},{"name":"readmission","type":["null","boolean"],"doc":"* Indicates whether this encounter represents a re-admission of the patient from a previous encounter.","default":null},{"name":"serviceDate","type":{"type":"string","avro.java.string":"String"},"doc":"* The service date and time of the encounter.  In an inpatient setting, this date represents when the patient was registered.  Otherwise it represents the date of the service.\n         * In IS0-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z)","validationType":"ISO_DATE_AND_TIME"},{"name":"dischargeDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The date and time the patient was discharged.\n         * In IS0-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z)","default":null,"validationType":"ISO_DATE_AND_TIME"},{"name":"benefitCoverages","type":{"type":"array","items":{"type":"record","name":"BenefitCoverage","doc":"* Insurance benefit coverage information","fields":[{"name":"benefitCoverageId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* An id that uniquely identifies this BenefitCoverage for a person within the same data partition.","default":null},{"name":"memberId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The unique Member Id assigned to the person by the Payer.","default":null},{"name":"relationToSubscriber","type":["null","Code"],"doc":"* The relationship of the person to the benefit Subscriber. Example values: 18 = Self, 01 = Spouse, 19 = Child, etc","default":null},{"name":"subscriberNumber","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* A number shared by the Subscriber and all of their dependents. Ties everyone in a family together.","default":null},{"name":"priorityRank","type":["null","int"],"doc":"* A value of priorityRank of a benefit coverage.","default":null,"validationType":"NON_NEGATIVE"},{"name":"plan","type":["null",{"type":"record","name":"BenefitPlanLite","doc":"* A lightweight Benefit Plan","fields":[{"name":"sourceId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* DEPRECATED - to be replaced by the standardBenefitPlanId.\n         * The id of the Plan provided by the data source.","default":null,"deprecated":"true"},{"name":"benefitPlanId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* An id that uniquely identifies this benefitPlan in a source system.","default":null},{"name":"standardBenefitPlanId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* A unique identifier for BenefitPlan from a reference/standard source system.","default":null},{"name":"ids","type":{"type":"array","items":{"type":"record","name":"PlanId","doc":"* Benefit Plan Identifier","fields":[{"name":"value","type":{"type":"string","avro.java.string":"String"},"doc":"* Payer Identifier"},{"name":"type","type":{"type":"enum","name":"PlanIdType","doc":"* An enumeration indicating type of a benefit plan id. e.g. EXTERNAL = Client assigned\n     * EDI = Electronic Data Interchange Payer Id, HPID = National Health Plan Identifier","symbols":["EXTERNAL","EDI","HPID","AT_RISK_PLAN_MNEMONIC","_NOT_RECOGNIZED"]},"doc":"* Type of payer identifier"},{"name":"assigningAuthority","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The assigning authority of the planId.","default":null}]}},"doc":"* ids for the Health Benefit Payer/Plan.  Not necessarily unique to the plan.  For example, EDI Payer IDs\n         * This attribute would could be populated with EDI Payer Ids, HIPAA National Plan IDs, External IDs","default":[]},{"name":"name","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* Name for a Health Benefit/Insurance plan","default":null},{"name":"payerName","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* Name of the Payer organization/entity that administers the Plan.","default":null},{"name":"payerSourceId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* A higher level payer based Id for plans. Allows a subset of plans to be identified without explicit knowledge\n         * of the underlying plan sourceIds.","default":null},{"name":"policyOrGroupNumber","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* Policy or Group number.  Often a health insurance card will display a Policy or Group number.\n         * This is the Policy or Group Number from the SBR03 element on 837 claims.","default":null},{"name":"policyOrGroupName","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* If a Policy or Group number is not available, a Policy or Group name may be provided.\n         * This is the Policy or Group Name from the SBR04 element on 837 claims.","default":null},{"name":"benefitType","type":["null","Code"],"doc":"* Code representing the Insurance Line/Benefit Type.","default":null},{"name":"lineOfBusiness","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* A 834 terminology used to distinguish sub-plan or populations within a health plan.","default":null}],"validationType":{"AT_LEAST_ONE_OF":["sourceId","ids","name","payerName","benefitType"]}}],"doc":"* DEPRECATED - to be replaced by the benefitPlan.\n         * The Health Benefit/Insurance plan.","default":null,"deprecated":"true"},{"name":"benefitPlan","type":["null",{"type":"record","name":"StandardizedBenefitPlanLite","doc":"* A standardized BenefitPlanLite that contains both raw and standard benefit plan","fields":[{"name":"raw","type":{"type":"record","name":"RawBenefitPlanLite","namespace":"com.cerner.pophealth.refrecord.models.raw","doc":"* A lightweight Benefit Plan. This record should contain at least one of: sourceId, ids, name, payerName, or benefitType","fields":[{"name":"sourceId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* DEPRECATED - to be replaced by the standardBenefitPlanId.\n         * The Id of the benefit coverage record provided by the data source.","default":null,"deprecated":"true"},{"name":"benefitPlanId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* An id that uniquely identifies this benefitPlan in a source system.","default":null},{"name":"standardBenefitPlanId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The id of the Plan used to join against reference data","default":null},{"name":"ids","type":{"type":"array","items":{"type":"record","name":"RawPlanId","fields":[{"name":"value","type":{"type":"string","avro.java.string":"String"},"doc":"* Benefit plan id"},{"name":"type","type":{"type":"string","avro.java.string":"String"},"doc":"* Should be one of {EXTERNAL, EDI, HPID, AT_RISK_PLAN_MNEMONIC} to be standardized in reference record.","validationType":["EXTERNAL","EDI","HPID","AT_RISK_PLAN_MNEMONIC"]},{"name":"assigningAuthority","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The assigning authority of the planId.","default":null}]}},"doc":"* ids for the Health Benefit Payer/Plan.  Not necessarily unique to the plan.  For example, EDI Payer IDs\n         * This attribute would could be populated with EDI Payer Ids, HIPAA National Plan IDs, External IDs","default":[]},{"name":"name","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* Name for the Payer/Plan\n         * Examples:  CIGNA C5 PLAN, UHC CHOICE EPO SELECT, UHC OPTIONS PPO","default":null},{"name":"payerSourceId","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* A higher level payer based Id for plans. Allows a subset of plans to be identified without explicit knowledge\n         * of the underlying plan sourceIds.","default":null},{"name":"payerName","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* Name of the Payer organization/entity that administers the Plan.","default":null},{"name":"policyOrGroupNumber","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* Policy or Group number.  Often a health insurance card will display a Policy or Group number.\n         * This is the Policy or Group Number from the SBR03 element on 837 claims.","default":null},{"name":"policyOrGroupName","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* If a Policy or Group number is not available, a Policy or Group name may be provided.\n         * This is the Policy or Group Name from the SBR04 element on 837 claims.","default":null},{"name":"benefitType","type":["null","RawCode"],"doc":"* Code representing the Insurance Line/Benefit Type associated with the Benefit Coverage.  \n         * Examples of Insurance Line/Benefit Type:  Health Maintenance Organization, Exclusive Provider Organization, Preferred Provider Organization, Health...","default":null},{"name":"lineOfBusiness","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* Used to distinguish sub-plan products or populations within a particular health plan.  'Line of Business' is pulled from 834 terminology.","default":null}]},"doc":"* Raw BenefitPlanLite comes from activity data (e.g. claims, enrollments, etc.) of source system."},{"name":"standard","type":["null","BenefitPlanLite"],"doc":"* BenefitPlanLite that is from a reference source that matches key attributes (e.g. source identifier or PlanId, etc.) of the raw.","default":null}]}],"doc":"* The Health Benefit/Insurance plan that has been normalized.\n         * It contains both raw and standard plan if a match found in client specified reference data.","default":null},{"name":"beginDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The start date of the Benefit Coverage. Could be the most recent effective date.\n         * In ISO-8601 extended format, with precision ranging from YYYY to YYYY-MM-DD (e.g. 1997 through 1997-07-16)","default":null,"validationType":"ABSOLUTE_ISO_DATE"},{"name":"endDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The end date of the Benefit Coverage.\n         * In ISO-8601 date format, with precision ranging from YYYY to YYYY-MM-DD (e.g. 1997 through 1997-07-16)","default":null,"validationType":"ABSOLUTE_ISO_DATE"}],"validationType":{"AT_LEAST_ONE_OF":["memberId","subscriberNumber","benefitPlan"]}}},"doc":"* A list of Benefit coverages sorted based on priorityRank for the person/patient involved in the encounter","default":[]},{"name":"locations","type":{"type":"array","items":{"type":"record","name":"EncounterLocation","doc":"* A model representing the patient's stay at a location during the Encounter","fields":[{"name":"facility","type":["null","LocationLite"],"doc":"* The facility of the encounter location","default":null},{"name":"serviceProviderOrg","type":["null","OrganizationLite"],"doc":"* The organization where the service is performed.","default":null},{"name":"building","type":["null","LocationLite"],"doc":"* The building of the encounter location","default":null},{"name":"nurseUnit","type":["null","LocationLite"],"doc":"* The nurse unit where the encounter occurred. This only applies to inpatient setting.","default":null},{"name":"room","type":["null","LocationLite"],"doc":"* The room of the encounter location","default":null},{"name":"bed","type":["null","LocationLite"],"doc":"* The bed the patient was in during the Encounter","default":null},{"name":"serviceDeliveryLocation","type":["null","LocationLite"],"doc":"* The service delivery location where the encounter occurred.  Can be a nursing unit in an inpatient setting or an office in an ambulatory setting.","default":null},{"name":"beginDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The encounter's begin date and time at the location.\n         * In IS0-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z)","default":null,"validationType":"ISO_DATE_AND_TIME"},{"name":"endDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The encounter end date and time at the location. \n         * In IS0-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z)","default":null,"validationType":"ISO_DATE_AND_TIME"},{"name":"estimatedDepartureDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The estimated Departure date and time of the encounter location.\n          * EncounterLocation.estimatedDepartureDate represents when the patient is expected to leave that location whereas the Encounter.estimatedDepartureDate represents the discharge date (for inpatient) or departure date (for outpatient).\n          * The date and time should be in ISO-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z), though equivalent ISO-8601 basic is also allowed (e.g. YYYYMMDD).","default":null,"validationType":"ISO_DATE_AND_TIME"}],"validationType":{"AT_LEAST_ONE_OF":["facility","building","nurseUnit","room","bed","serviceDeliveryLocation"]}}},"doc":"* A list of all locations the patient was at during the encounter and duration of stay at those locations. Locations are sorted in descending order by beginDate.","default":[]},{"name":"encounterTypes","type":{"type":"array","items":{"type":"record","name":"EncounterType","doc":"* A model representing the type of the Encounter","fields":[{"name":"type","type":"Code","doc":"* The type of the encounter.\n         * Examples: Inpatient, Outpatient and Recurring patient."},{"name":"classification","type":["null","Code"],"doc":"* Classification of the encounter.\n         * Examples: Inpatient, Outpatient.","default":null},{"name":"beginDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The start of the effective time period for the encounter type.\n         * In IS0-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z)","default":null,"validationType":"ISO_DATE_AND_TIME"},{"name":"endDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The end of the effective time period for the encounter type.\n         * In IS0-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z)","default":null,"validationType":"ISO_DATE_AND_TIME"}]}},"doc":"* A list of encounterType to reflect encounter type change history. Encounter types are sorted in descending order by beginDate.","default":[]},{"name":"hospitalServices","type":{"type":"array","items":{"type":"record","name":"EncounterService","doc":"* A model representing the service offered during the Encounter","fields":[{"name":"service","type":"Code","doc":"* The hospital service provided during the encounter."},{"name":"beginDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The begin date time of the service.\n         * In IS0-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z)","default":null,"validationType":"ISO_DATE_AND_TIME"},{"name":"endDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The end date time of the service. \n         * In IS0-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z)","default":null,"validationType":"ISO_DATE_AND_TIME"}]}},"doc":"* A list of all services rendered during the Encounter and the duration of when they were rendered. Services are sorted in descending order by beginDate.","default":[]},{"name":"admissionType","type":["null","Code"],"doc":"* A variety of codes explaining the priority of the admission to a medical facility (Elective, Emergent, Routine).","default":null},{"name":"status","type":["null","Code"],"doc":"* The status of the encounter. Indicates if it is active, hold, discharged, cancelled etc","default":null},{"name":"estimatedArrivalDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The estimated arrival date and time of the encounter.  In an inpatient setting, this date represents when the patient is expected to arrive.\n         * The date and time should be in ISO-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z), though equivalent ISO-8601 basic is also allowed (e.g. YYYYMMDD).","default":null,"validationType":"ISO_DATE_AND_TIME"},{"name":"estimatedDepartureDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* Encounter.estimatedDepartureDate represents the discharge date (for inpatient) or departure date (for outpatient) whereas the EncounterLocation.estimatedDepartureDate represents when the patient is expected to leave that location.\n         * The date and time should be in ISO-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z), though equivalent ISO-8601 basic is also allowed (e.g. YYYYMMDD).","default":null,"validationType":"ISO_DATE_AND_TIME"},{"name":"actualArrivalDate","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The actual arrival date and time of the encounter.  In an inpatient setting, this date represents when the patient is registered.  Otherwise it represents the date of the service.\n         * The date and time should be in ISO-8601 extended format, with precision ranging from YYYY to YYYY-MM-DDThh:mm:ss.SSSZ (e.g. 1997 through 1997-07-16T19:20:00.000Z), though equivalent ISO-8601 basic is also allowed (e.g. YYYYMMDD).","default":null,"validationType":"ISO_DATE_AND_TIME"},{"name":"source","type":["null",{"type":"record","name":"Source","doc":"* A structure representing information about the concept as it pertains to the source system it originated from.","fields":[{"name":"id","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* An id that uniquely identifies an entity in the source system.\n         * If present the RawSource.containerId field is used to fill this field else RawSource.id is used.","default":null},{"name":"type","type":{"type":"enum","name":"SourceType","doc":"* An enumeration that identifies the types of data sources.","symbols":["CLAIM","EMR","ENROLLMENT","BILLING","OTHER","_NOT_VALUED","_NOT_RECOGNIZED"]},"doc":"* Source type of the source system (enrollments, claims etc).","default":"_NOT_VALUED"},{"name":"version","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* Version information of an entity in the source system.","default":null},{"name":"rawEntityLocators","type":{"type":"array","items":{"type":"record","name":"SourceLocator","doc":"* A structure representing traceability information.","fields":[{"name":"entityKey","type":{"type":"string","avro.java.string":"String"},"doc":"* Location of the file represented by an entityKey."},{"name":"version","type":"long","doc":"* Version information of the file."},{"name":"hdfsPath","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* Location of the file represented by an HDFS path.","default":null},{"name":"midasVersion","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The version of the Midas jar used to load this data.","default":null},{"name":"midasJarName","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The name of the Midas jar used to load this data.","default":null}]}},"doc":"* Entity keys of the raw entities (written to the data sink).","default":[]},{"name":"normalizedEntityLocator","type":["null","SourceLocator"],"doc":"* Entity key of the normalized raw entities (written by data acquisition)","default":null},{"name":"contributingOrganization","type":["null","OrganizationLite"],"doc":"* Contributing organization to identify the owner of the record","default":null},{"name":"releaseTag","type":["null",{"type":"string","avro.java.string":"String"}],"doc":"* The release tag (often a date) that this entity was released or emitted from the source system.\n        * Will be lexicographically comparable for all releaseTags for the source.","default":null}]}],"doc":"* Source information for troubleshooting purposes.","default":null},{"name":"active","type":"boolean","doc":"* An indication whether the entity is active or inactive as determine by the data source.\n         * If no indication was provided from the data source, the entity is assumed to be active.","default":true}]},"null"],"doc":"","order":"ignore"}]}avro.codecdeflate ÌfÕC5ÇvnzâbÇ>ªöíX_kÛHWcrÆcòp#ø¡ô¡Dò®þY2÷âZ'4íqoe¥]»¢òÊ¬$¿Pûî³Üç¹Y+v&JH^\É`­¤ÙýÍÎÌ¿ß¡®éxX÷¦Ñmæù:õ¦Û$Ä~èM³æø:æ"Lrqù¿ôTfQ%bø3Fú.SÝÓ4cC°&2ùùQôæ:ÉeÈÇìö}ªfGmx¶ãþK1L"64âbbye¸ïjÚFð´D ½Js9ãr¥}Ëv*,¢æÅûKm#\fµÚÏÂØ¯²ÖÍ".2m£Rf³µ¤qÎQæÙDFÙ
5F|_-@þèçãÏ)ÔÒpÌPnQ¬Ìæ\F!í}ÿYÒhó'ãMx"hFãÞ¶I¤Ñ÷Î¨ä½O"t2pmbª_Õ'ï95Å½k.QÈÁib]À×1S <Y$fûð÷dãDí£ð(WðªÜ3Ô,¦½*ËG£yÇ4Käj«SZ
Ú;À¦]³çàÈÔ£ÕV¥Üä³(=¶å¸¸Ò§×_£8æ¬7Ée
Q¿U,7ìö+áÂ<+b`«SjØGÔNälÌÞÞ´ëÀÎ9z´mváö·ªxiÛ±Yfa+a5v*¤^ßdÃLãòRÎ7/EY-],mÇ±Z¶¾PQ9QÛÂ>©öÖÛ`é}H¹¶Ñ+õØ	Ñ1Ñ	 W¶M8>|CPÌ¸8Kª¬Íù<X#QáMHe¬µ ÿc¦mÄKÒÀ«ÞÀèæäÓ(»©Ç·iF£ýuçõÆ¯iF37ºÝC~DÝ]q©\×ÃÍ!Úo¡ÖL&ù5¯®.ãÄ^Ëhëÿ(	ÄàÉ´ä<M
ªsþÏÇóÑ»ÇÀýhëÁý¸~m'üõØT!¿öÿ8Öòpz¿<¬·jÿC«èp8ð²oøÚª- <T÷}×
¸
Î&ÜöÚ/ÙÌnÏ|8ÚoÆPÑ­±ý2­äó7¼%P^¦a`2æ+,WnUgPö×®*4J§êT\5ÔUgö­ä®VisrÁßéýðñ4H½HU6ü{Ð/!´øÓ0¬[ØrtÛf8^ý#efÐÚýlµàÃóÉÙå§	ô3}Õ¶ì<ÒÅ@'&xðß÷ß¾÷Åsíàâiä_|2qM>ÕäSM>ÕçuM>ÕäSM>ÕäSM>ÕäSM>ÕäSM>ÕäÓ¡®É§|ªÉ'íàÌfÕC5ÇvnzâbÇ>ªö